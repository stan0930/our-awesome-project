<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.campus.mapper.CampusErrandOrderMapper">

    <resultMap type="CampusErrandOrder" id="CampusErrandOrderResult">
        <result property="orderId"    column="order_id"    />
        <result property="publisherId"    column="publisher_id"    />
        <result property="takerId"    column="taker_id"    />
        <result property="orderType"    column="order_type"    />
        <result property="title"    column="title"    />
        <result property="detail"    column="detail"    />
        <result property="reward"    column="reward"    />
        <result property="deliveryAddress"    column="delivery_address"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="takeTime"    column="take_time"    />
        <result property="finishTime"    column="finish_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="publisherNickName" column="publisher_nick_name" />
        <result property="takerNickName" column="taker_nick_name" />
        <result property="publisherAvatar" column="publisher_avatar" />
        <result property="takerAvatar" column="taker_avatar" />
    </resultMap>

    <sql id="selectCampusErrandOrderVo">
        select o.order_id, o.publisher_id, o.taker_id, o.order_type, o.title, o.detail, o.reward, o.delivery_address, o.status, o.create_time, o.take_time, o.finish_time, o.create_by, o.update_by
        from campus_errand_order o
    </sql>

    <select id="selectCampusErrandOrderList" parameterType="CampusErrandOrder" resultMap="CampusErrandOrderResult">
        select o.order_id, o.publisher_id, o.taker_id, o.order_type, o.title, o.detail, o.reward, o.delivery_address, o.status, o.create_time, o.take_time, o.finish_time,
        u.nick_name as publisher_nick_name,
        u.avatar as publisher_avatar,  -- 【修复】增加查询发布人头像
        o.create_by, o.update_by
        from campus_errand_order o
        left join sys_user u on u.user_id = o.publisher_id
        <where>
            <if test="publisherId != null "> and o.publisher_id = #{publisherId}</if>
            <if test="takerId != null "> and o.taker_id = #{takerId}</if>
            <if test="orderType != null  and orderType != ''"> and o.order_type = #{orderType}</if>
            <if test="title != null  and title != ''"> and o.title like concat('%', #{title}, '%')</if>
            <if test="status != null  and status != ''"> and o.status = #{status}</if>
        </where>
    </select>

    <select id="selectCampusErrandOrderByOrderId" parameterType="Long" resultMap="CampusErrandOrderResult">
        <include refid="selectCampusErrandOrderVo"/>
        where order_id = #{orderId}
    </select>

    <insert id="insertCampusErrandOrder" parameterType="CampusErrandOrder" useGeneratedKeys="true" keyProperty="orderId">
        insert into campus_errand_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="publisherId != null">publisher_id,</if>
            <if test="takerId != null">taker_id,</if>
            <if test="orderType != null and orderType != ''">order_type,</if>
            <if test="title != null and title != ''">title,</if>
            <if test="detail != null">detail,</if>
            <if test="reward != null">reward,</if>
            <if test="deliveryAddress != null">delivery_address,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="takeTime != null">take_time,</if>
            <if test="finishTime != null">finish_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="publisherId != null">#{publisherId},</if>
            <if test="takerId != null">#{takerId},</if>
            <if test="orderType != null and orderType != ''">#{orderType},</if>
            <if test="title != null and title != ''">#{title},</if>
            <if test="detail != null">#{detail},</if>
            <if test="reward != null">#{reward},</if>
            <if test="deliveryAddress != null">#{deliveryAddress},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="takeTime != null">#{takeTime},</if>
            <if test="finishTime != null">#{finishTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
        </trim>
    </insert>

    <update id="updateCampusErrandOrder" parameterType="CampusErrandOrder">
        update campus_errand_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="publisherId != null">publisher_id = #{publisherId},</if>
            <if test="takerId != null">taker_id = #{takerId},</if>
            <if test="orderType != null and orderType != ''">order_type = #{orderType},</if>
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="detail != null">detail = #{detail},</if>
            <if test="reward != null">reward = #{reward},</if>
            <if test="deliveryAddress != null">delivery_address = #{deliveryAddress},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="takeTime != null">take_time = #{takeTime},</if>
            <if test="finishTime != null">finish_time = #{finishTime},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
        </trim>
        where order_id = #{orderId}
    </update>

    <delete id="deleteCampusErrandOrderByOrderId" parameterType="Long">
        delete from campus_errand_order where order_id = #{orderId}
    </delete>

    <delete id="deleteCampusErrandOrderByOrderIds" parameterType="String">
        delete from campus_errand_order where order_id in
        <foreach item="orderId" collection="array" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>

    <select id="selectMyPublishedErrandOrderList" parameterType="CampusErrandOrder" resultMap="CampusErrandOrderResult">
        select o.order_id, o.publisher_id, o.taker_id, o.order_type, o.title, o.detail, o.reward, o.delivery_address, o.status, o.create_time, o.take_time, o.finish_time,
        taker.nick_name as taker_nick_name, taker.avatar as taker_avatar
        from campus_errand_order o
        left join sys_user taker on taker.user_id = o.taker_id
        <where>
            o.publisher_id = #{publisherId}
        </where>
        order by o.create_time desc
    </select>

    <select id="selectMyTakenErrandOrderList" parameterType="CampusErrandOrder" resultMap="CampusErrandOrderResult">
        select o.order_id, o.publisher_id, o.taker_id, o.order_type, o.title, o.detail, o.reward, o.delivery_address, o.status, o.create_time, o.take_time, o.finish_time,
        publisher.nick_name as publisher_nick_name, publisher.avatar as publisher_avatar
        from campus_errand_order o
        left join sys_user publisher on publisher.user_id = o.publisher_id
        <where>
            o.taker_id = #{takerId}
        </where>
        order by o.take_time desc
    </select>
</mapper>
